{"ast":null,"code":"var _jsxFileName = \"/Users/laurenshultz/Dev/web/CYBR4580/find_my_device_app/application/app/javascript/components/homePage/DeviceDetailWindow.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React from \"react\";\nimport DeviceInfoFooter from './details/DeviceInfoFooter';\n\nvar DeviceDetailWindow = function DeviceDetailWindow(_ref) {\n  var focusedDevice = _ref.focusedDevice,\n      styles = _ref.styles,\n      setDeviceStatus = _ref.setDeviceStatus,\n      addNewDevice = _ref.addNewDevice,\n      updateDeviceStatus = _ref.updateDeviceStatus,\n      onRemoveDevice = _ref.onRemoveDevice;\n  console.log(\"DeviceDetailWindow\", focusedDevice);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dropDownIsOpen = _React$useState2[0],\n      setDropDownIsOpen = _React$useState2[1];\n\n  var markDeviceMissing = function markDeviceMissing() {\n    console.log(\"Device marked missing: \", focusedDevice.id, \" Status: missing\");\n    updateDeviceStatus(focusedDevice.id, \"missing\");\n  };\n\n  var markDeviceFound = function markDeviceFound() {\n    console.log(\"Device marked found\");\n    updateDeviceStatus(focusedDevice.id, \"good-standing\");\n  };\n\n  var removeDevice = function removeDevice() {\n    console.log(\"Remove Device\");\n    onRemoveDevice(focusedDevice.id);\n  };\n\n  var renderRegisteredDeviceInfo = function renderRegisteredDeviceInfo() {\n    return React.createElement(React.Fragment, null, focusedDevice.status == \"missing\" ? React.createElement(\"h4\", {\n      className: \"mt-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"This device has been reported mising.\") : React.createElement(\"h4\", {\n      className: \"mt-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"This device not currently reported mising.\"));\n  };\n\n  var renderPendingDeviceInfo = function renderPendingDeviceInfo() {\n    return React.createElement(\"h4\", {\n      className: \"mt-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"This device is not yet registered, to register this device, download the app on your phone and enter the 6 digit code: \", focusedDevice.registration_code);\n  };\n\n  var renderMarkDeviceMissingButton = function renderMarkDeviceMissingButton() {\n    var enabled = focusedDevice.registration_status == \"registered\";\n    return React.createElement(React.Fragment, null, enabled && React.createElement(\"button\", {\n      className: \"markDeviceMissingButton\",\n      disabled: !enabled,\n      onClick: markDeviceMissing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Mark Device Missing\"));\n  };\n\n  var renderMarkDeviceFoundButton = function renderMarkDeviceFoundButton() {\n    var enabled = focusedDevice.registration_status == \"registered\";\n    return React.createElement(\"button\", {\n      className: \"markDeviceFoundButton\",\n      enabled: enabled ? 1 : 0,\n      onClick: markDeviceFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Mark Device Found\");\n  };\n\n  var toggleDropdown = function toggleDropdown() {\n    setDropDownIsOpen(!dropDownIsOpen);\n  };\n\n  var renderMissingDeviceInfo = function renderMissingDeviceInfo() {\n    return React.createElement(\"div\", {\n      className: \"missingDeviceInfoCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, dropDownIsOpen ? React.createElement(\"button\", {\n      onClick: toggleDropdown,\n      className: \"showMoreDetailButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"- Show Less Details\") : React.createElement(\"button\", {\n      onClick: toggleDropdown,\n      className: \"showMoreDetailButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"+ Show More Details\"), dropDownIsOpen && React.createElement(DeviceInfoFooter, Object.assign({\n      knownLocations: focusedDevice.known_locations\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n  };\n\n  var displayFocusedDevice = function displayFocusedDevice() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"deviceInfoHorizontalLayout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://image.shutterstock.com/image-vector/smartphone-iphone-style-black-color-260nw-530681137.jpg\",\n      className: \"circularSquareLarge\",\n      alt: \"...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"deviceInfoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Device Name: \", focusedDevice.name), React.createElement(\"h4\", {\n      className: \"mt-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Device IMEI: \", focusedDevice.imei), focusedDevice.registration_status == \"registered\" ? renderRegisteredDeviceInfo() : renderPendingDeviceInfo(), focusedDevice.status == \"missing\" ? renderMarkDeviceFoundButton() : renderMarkDeviceMissingButton(), React.createElement(\"button\", {\n      className: \"markDeviceFoundButton\",\n      onClick: removeDevice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Remove This Device\"))), focusedDevice && focusedDevice.status == \"missing\" && renderMissingDeviceInfo());\n  };\n\n  var addNewDeviceForm = function addNewDeviceForm() {\n    console.log(\"Add new device\"); //Todo: open form\n  };\n\n  var displayEmptyState = function displayEmptyState() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"You currently have no device added.\"), React.createElement(\"div\", {\n      onClick: addNewDeviceForm,\n      className: \"addNewDeviceButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Add New Device +\"));\n  };\n\n  var cardClassName = focusedDevice.status == \"missing\" ? \"missingDeviceDetailCard\" : \"deviceDetailCard\";\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: cardClassName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, focusedDevice ? displayFocusedDevice() : displayEmptyState()));\n};\n\nexport default DeviceDetailWindow;","map":{"version":3,"sources":["/Users/laurenshultz/Dev/web/CYBR4580/find_my_device_app/application/app/javascript/components/homePage/DeviceDetailWindow.jsx"],"names":["React","DeviceInfoFooter","DeviceDetailWindow","focusedDevice","styles","setDeviceStatus","addNewDevice","updateDeviceStatus","onRemoveDevice","console","log","useState","dropDownIsOpen","setDropDownIsOpen","markDeviceMissing","id","markDeviceFound","removeDevice","renderRegisteredDeviceInfo","status","renderPendingDeviceInfo","registration_code","renderMarkDeviceMissingButton","enabled","registration_status","renderMarkDeviceFoundButton","toggleDropdown","renderMissingDeviceInfo","knownLocations","known_locations","displayFocusedDevice","name","imei","addNewDeviceForm","displayEmptyState","cardClassName"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nimport DeviceInfoFooter from './details/DeviceInfoFooter'\n\nconst DeviceDetailWindow = ({\n    focusedDevice,\n    styles,\n    setDeviceStatus,\n    addNewDevice,\n    updateDeviceStatus,\n    onRemoveDevice\n}) => {\n    console.log(\"DeviceDetailWindow\", focusedDevice);\n    const [dropDownIsOpen, setDropDownIsOpen] = React.useState(false)\n\n    const markDeviceMissing = () => {\n        console.log(\"Device marked missing: \", focusedDevice.id, \" Status: missing\");\n        updateDeviceStatus(focusedDevice.id, \"missing\");\n    }\n\n    const markDeviceFound = () => {\n        console.log(\"Device marked found\");\n        updateDeviceStatus(focusedDevice.id, \"good-standing\");\n    }\n\n    const removeDevice = () => {\n        console.log(\"Remove Device\");\n        onRemoveDevice(focusedDevice.id);\n    }\n\n    const renderRegisteredDeviceInfo = () => {\n        return (\n            <>\n                {focusedDevice.status == \"missing\"\n                    ? <h4 className=\"mt-0\">This device has been reported mising.</h4>\n                    : <h4 className=\"mt-0\">This device not currently reported mising.</h4>\n                }\n            </>\n        )\n    }\n\n    const renderPendingDeviceInfo = () => {\n        return (\n            <h4 className=\"mt-0\">This device is not yet registered, to register this device, download the app on your phone and enter the 6 digit code: {focusedDevice.registration_code}</h4>\n        )\n    }\n\n    const renderMarkDeviceMissingButton = () => {\n        const enabled = focusedDevice.registration_status == \"registered\";\n        return (\n            <>\n                {enabled && <button className=\"markDeviceMissingButton\" disabled={!enabled} onClick={markDeviceMissing}>Mark Device Missing</button>}\n            </>\n        )\n    }\n\n    const renderMarkDeviceFoundButton = () => {\n        const enabled = focusedDevice.registration_status == \"registered\";\n        return (\n            <button className=\"markDeviceFoundButton\" enabled={enabled ? 1 : 0} onClick={markDeviceFound}>Mark Device Found</button>\n        )\n    }\n\n    const toggleDropdown = () => {\n        setDropDownIsOpen(!dropDownIsOpen);\n    }\n\n    const renderMissingDeviceInfo = () => {\n        return (\n            <div className=\"missingDeviceInfoCard\">\n                {dropDownIsOpen \n                    ? <button onClick={toggleDropdown} className=\"showMoreDetailButton\">- Show Less Details</button>\n                    : <button onClick={toggleDropdown} className=\"showMoreDetailButton\">+ Show More Details</button> }\n                {dropDownIsOpen\n                && <DeviceInfoFooter {...{\n                    knownLocations: focusedDevice.known_locations\n                }}></DeviceInfoFooter>}\n            </div>\n        )\n    }\n\n    const displayFocusedDevice = () => {\n        return (\n            <div>\n                <div className=\"deviceInfoHorizontalLayout\">\n                    <img src=\"https://image.shutterstock.com/image-vector/smartphone-iphone-style-black-color-260nw-530681137.jpg\" className=\"circularSquareLarge\" alt=\"...\"/>\n\n                    <div className=\"deviceInfoList\">\n                        <h3 className=\"mt-0\">Device Name: {focusedDevice.name}</h3>\n                        <h4 className=\"mt-0\">Device IMEI: {focusedDevice.imei}</h4>\n                        {focusedDevice.registration_status == \"registered\"\n                            ? renderRegisteredDeviceInfo()\n                            : renderPendingDeviceInfo() }\n                        {focusedDevice.status == \"missing\"\n                            ? renderMarkDeviceFoundButton()\n                            : renderMarkDeviceMissingButton() \n                        }\n                        <button className=\"markDeviceFoundButton\" onClick={removeDevice}>Remove This Device</button>\n                    </div>\n                </div>\n                { focusedDevice && focusedDevice.status == \"missing\" && renderMissingDeviceInfo() }\n            </div>\n        )\n    }\n\n    const addNewDeviceForm = () => {\n        console.log(\"Add new device\")\n        //Todo: open form\n    }\n\n    const displayEmptyState = () => {\n        return (\n            <>\n                <p>You currently have no device added.</p>\n                <div onClick={addNewDeviceForm} className=\"addNewDeviceButton\">\n                    Add New Device +\n                </div>\n            </>\n        )\n    }\n\n    const cardClassName = (focusedDevice.status == \"missing\")\n        ? \"missingDeviceDetailCard\"\n        : \"deviceDetailCard\"\n\n    return (\n        <>\n            <div className={cardClassName}>\n                {focusedDevice\n                    ? displayFocusedDevice()\n                    : displayEmptyState()\n                }\n            </div>\n        </>\n    )\n}\n\nexport default DeviceDetailWindow;\n"]},"metadata":{},"sourceType":"module"}
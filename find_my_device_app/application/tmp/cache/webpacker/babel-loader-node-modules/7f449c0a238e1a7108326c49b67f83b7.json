{"ast":null,"code":"var _jsxFileName = \"/Users/laurenshultz/Dev/web/CYBR4580/find_my_device_app/application/app/javascript/components/homePage/list/DeviceRow.jsx\";\nimport React from \"react\";\nimport BaseDivider from '../../shared/BaseDivider';\n\nvar DeviceRow = function DeviceRow(_ref) {\n  var focusedDevice = _ref.focusedDevice,\n      setFocusedDevice = _ref.setFocusedDevice,\n      device = _ref.device,\n      isLastRow = _ref.isLastRow;\n\n  var onDeviceSelected = function onDeviceSelected() {\n    //console.log(\"Focused Device Set To: \", device);\n    setFocusedDevice(device);\n  };\n\n  var unfocusedDeviceRow = function unfocusedDeviceRow() {\n    var className = \"deviceRow\";\n    if (device.status == \"missing\") className = \"deviceRowMissing\";\n    if (device.registration_status != \"registered\") className = \"deviceRowPending\";\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"circularSquare\",\n      src: device.type_photo_url,\n      alt: \"...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"test\",\n      onClick: onDeviceSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, device.name), device.registration_status == \"pending\" ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Registration Pending\") : device.status == \"missing\" ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Status: Missing\") : React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Status: Good Standing\")));\n  };\n\n  var focusedDeviceRow = function focusedDeviceRow() {\n    var className = \"focusedDeviceRow\";\n    if (device.status == \"missing\") className = \"focusedDeviceRowMissing\";\n    if (device.registration_status != \"registered\") className = \"focusedDeviceRowPending\";\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"circularSquare\",\n      src: device.type_photo_url,\n      alt: \"...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"test\",\n      onClick: onDeviceSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, device.name), device.registration_status == \"pending\" ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Registration Pending\") : device.status == \"missing\" ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Status: Missing\") : React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Status: Good Standing\")));\n  };\n\n  return React.createElement(React.Fragment, null, focusedDevice && focusedDevice.id == device.id ? focusedDeviceRow() : unfocusedDeviceRow(), !isLastRow ? React.createElement(BaseDivider, Object.assign({\n    thickness: \"1px\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })) : React.createElement(React.Fragment, null));\n};\n\nexport default DeviceRow;","map":{"version":3,"sources":["/Users/laurenshultz/Dev/web/CYBR4580/find_my_device_app/application/app/javascript/components/homePage/list/DeviceRow.jsx"],"names":["React","BaseDivider","DeviceRow","focusedDevice","setFocusedDevice","device","isLastRow","onDeviceSelected","unfocusedDeviceRow","className","status","registration_status","type_photo_url","name","focusedDeviceRow","id","thickness"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nimport BaseDivider from '../../shared/BaseDivider'\n\nconst DeviceRow = ({\n    focusedDevice,\n    setFocusedDevice,\n    device,\n    isLastRow\n}) => {\n    const onDeviceSelected = () => {\n        //console.log(\"Focused Device Set To: \", device);\n        setFocusedDevice(device);\n    }\n\n    const unfocusedDeviceRow = () => {\n        let className = \"deviceRow\"\n        if (device.status == \"missing\") className = \"deviceRowMissing\"\n        if (device.registration_status != \"registered\") className = \"deviceRowPending\"\n        return (\n            <div className={className}>\n            <div>\n                <img className=\"circularSquare\" src={device.type_photo_url} alt=\"...\"/>\n            </div>\n            <div className=\"test\" onClick={onDeviceSelected}>\n                <h2>{device.name}</h2>\n                {device.registration_status == \"pending\" \n                    ? <h4>Registration Pending</h4>\n                    : device.status == \"missing\" \n                        ? <h4>Status: Missing</h4>\n                        : <h4>Status: Good Standing</h4>\n                }\n            </div>\n            </div>\n        )\n    }\n\n    const focusedDeviceRow = () => {\n        let className = \"focusedDeviceRow\"\n        if (device.status == \"missing\") className = \"focusedDeviceRowMissing\"\n        if (device.registration_status != \"registered\") className = \"focusedDeviceRowPending\"\n        return (\n            <div className={className}>\n            <div>\n                <img className=\"circularSquare\" src={device.type_photo_url} alt=\"...\"/>\n            </div>\n            <div className=\"test\" onClick={onDeviceSelected}>\n                <h2>{device.name}</h2>\n                {device.registration_status == \"pending\" \n                    ? <h4>Registration Pending</h4>\n                    : device.status == \"missing\" \n                        ? <h4>Status: Missing</h4>\n                        : <h4>Status: Good Standing</h4>\n                }\n            </div>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            { focusedDevice && focusedDevice.id == device.id\n                ? focusedDeviceRow()\n                : unfocusedDeviceRow()\n            }\n            { !isLastRow ? <BaseDivider {...{ thickness: \"1px\" }}></BaseDivider> : <></> }\n        </>\n    )\n}\n\nexport default DeviceRow;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { middleWare, apiReducer, railsActions } from 'redux-rails';\nimport { default as thunk } from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { ADD_DEVICE, UPDATE_DEVICE_STATUS, UPDATE_DEVICE_STATUS_SUCCESS, ADD_DEVICE_SUCCESS, ADD_DEVICE_FAILURE, SET_LOADING_STATUS, REMOVE_DEVICE_SUCCESS } from './components/actions';\nimport update from 'immutability-helper';\nvar initialState = {\n  currentUser: {},\n  userDevices: [],\n  isLoading: false,\n  deviceTypes: []\n};\n\nfunction isLoading() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_LOADING_STATUS:\n      console.log(\"Loading Set To: \", action.isLoading);\n      return action.isLoading;\n\n    default:\n      return state;\n  }\n}\n\nfunction deviceTypes() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nfunction currentUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return state;\n}\n\nfunction userDevices() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_DEVICE:\n      return state;\n\n    case ADD_DEVICE_SUCCESS:\n      return [].concat(_toConsumableArray(state), [action.device]);\n\n    case ADD_DEVICE_FAILURE:\n      return state;\n\n    case UPDATE_DEVICE_STATUS_SUCCESS:\n      var index = 0;\n\n      for (index = 0; index < state.length; index++) {\n        if (state[index].id === action.deviceId) {\n          break;\n        }\n      }\n\n      return update(state, _defineProperty({}, index, {\n        status: {\n          $set: action.status\n        }\n      }));\n\n    case REMOVE_DEVICE_SUCCESS:\n      return action.devices;\n\n    default:\n      return state;\n  }\n}\n\nvar rootReducer = combineReducers({\n  currentUser: currentUser,\n  userDevices: userDevices,\n  isLoading: isLoading,\n  deviceTypes: deviceTypes\n});\nexport default function configureStore() {\n  var hydratedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var store = createStore(rootReducer, _objectSpread({}, initialState, {}, hydratedState), composeWithDevTools(applyMiddleware(thunk)));\n  return store;\n}","map":{"version":3,"sources":["/Users/laurenshultz/Dev/web/CYBR4580/find_my_device_app/application/app/javascript/configureStore.js"],"names":["createStore","applyMiddleware","combineReducers","middleWare","apiReducer","railsActions","default","thunk","composeWithDevTools","ADD_DEVICE","UPDATE_DEVICE_STATUS","UPDATE_DEVICE_STATUS_SUCCESS","ADD_DEVICE_SUCCESS","ADD_DEVICE_FAILURE","SET_LOADING_STATUS","REMOVE_DEVICE_SUCCESS","update","initialState","currentUser","userDevices","isLoading","deviceTypes","state","action","type","console","log","device","index","length","id","deviceId","status","$set","devices","rootReducer","configureStore","hydratedState","store"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC,QAAqD,aAArD;AACA,SAASC,OAAO,IAAIC,KAApB,QAAiC,aAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,UAAT,EACIC,oBADJ,EAEIC,4BAFJ,EAGIC,kBAHJ,EAIIC,kBAJJ,EAKIC,kBALJ,EAMIC,qBANJ,QAOO,sBAPP;AAQA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,SAAS,EAAE,KAHM;AAIjBC,EAAAA,WAAW,EAAE;AAJI,CAArB;;AAOA,SAASD,SAAT,GAA0C;AAAA,MAAvBE,KAAuB,uEAAf,KAAe;AAAA,MAARC,MAAQ;;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,kBAAL;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,MAAM,CAACH,SAAvC;AACA,aAAOG,MAAM,CAACH,SAAd;;AACJ;AACI,aAAOE,KAAP;AALR;AAOH;;AAED,SAASD,WAAT,GAAyC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACI;AACI,aAAOF,KAAP;AAFR;AAIH;;AAED,SAASJ,WAAT,GAAyC;AAAA,MAApBI,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;AACrC,SAAOD,KAAP;AACH;;AAED,SAASH,WAAT,GAAyC;AAAA,MAApBG,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,UAAL;AACI,aAAOa,KAAP;;AACJ,SAAKV,kBAAL;AACI,0CAAWU,KAAX,IAAkBC,MAAM,CAACI,MAAzB;;AACJ,SAAKd,kBAAL;AACI,aAAOS,KAAP;;AACJ,SAAKX,4BAAL;AACI,UAAIiB,KAAK,GAAG,CAAZ;;AACA,WAAKA,KAAK,GAAG,CAAb,EAAgBA,KAAK,GAAGN,KAAK,CAACO,MAA9B,EAAsCD,KAAK,EAA3C,EAA+C;AAC3C,YAAIN,KAAK,CAACM,KAAD,CAAL,CAAaE,EAAb,KAAoBP,MAAM,CAACQ,QAA/B,EAAyC;AACrC;AACH;AACJ;;AACD,aAAOf,MAAM,CAACM,KAAD,sBACNM,KADM,EACE;AACPI,QAAAA,MAAM,EAAE;AAACC,UAAAA,IAAI,EAAEV,MAAM,CAACS;AAAd;AADD,OADF,EAAb;;AAKJ,SAAKjB,qBAAL;AACI,aAAOQ,MAAM,CAACW,OAAd;;AACJ;AACI,aAAOZ,KAAP;AAtBR;AAwBH;;AAED,IAAMa,WAAW,GAAGjC,eAAe,CAAC;AAChCgB,EAAAA,WAAW,EAAXA,WADgC;AAEhCC,EAAAA,WAAW,EAAXA,WAFgC;AAGhCC,EAAAA,SAAS,EAATA,SAHgC;AAIhCC,EAAAA,WAAW,EAAXA;AAJgC,CAAD,CAAnC;AAOA,eAAe,SAASe,cAAT,GAA4C;AAAA,MAApBC,aAAoB,uEAAJ,EAAI;AACvD,MAAMC,KAAK,GAAGtC,WAAW,CACrBmC,WADqB,oBAEjBlB,YAFiB,MAEAoB,aAFA,GAGrB7B,mBAAmB,CACfP,eAAe,CAACM,KAAD,CADA,CAHE,CAAzB;AAOA,SAAO+B,KAAP;AACH","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { middleWare, apiReducer, railsActions } from 'redux-rails';\nimport { default as thunk } from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { ADD_DEVICE, \n    UPDATE_DEVICE_STATUS, \n    UPDATE_DEVICE_STATUS_SUCCESS,\n    ADD_DEVICE_SUCCESS, \n    ADD_DEVICE_FAILURE,\n    SET_LOADING_STATUS,\n    REMOVE_DEVICE_SUCCESS\n} from './components/actions'\nimport update from 'immutability-helper';\n\nconst initialState = {\n    currentUser: {},\n    userDevices: [],\n    isLoading: false,\n    deviceTypes: []\n};\n\nfunction isLoading(state = false, action) {\n    switch (action.type) {\n        case SET_LOADING_STATUS:\n            console.log(\"Loading Set To: \", action.isLoading);\n            return action.isLoading;\n        default:\n            return state;\n    }\n}\n\nfunction deviceTypes(state = [], action) {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\nfunction currentUser(state = {}, action) {\n    return state;\n}\n\nfunction userDevices(state = [], action) {\n    switch (action.type) {\n        case ADD_DEVICE:\n            return state;\n        case ADD_DEVICE_SUCCESS:\n            return [...state, action.device];\n        case ADD_DEVICE_FAILURE:\n            return state;\n        case UPDATE_DEVICE_STATUS_SUCCESS:\n            var index = 0;\n            for (index = 0; index < state.length; index++) {\n                if (state[index].id === action.deviceId) {\n                    break;\n                }\n            }\n            return update(state, { \n                  [index]: {\n                    status: {$set: action.status}\n                  }\n              });\n        case REMOVE_DEVICE_SUCCESS:\n            return action.devices;\n        default:\n            return state;\n    }\n}\n\nconst rootReducer = combineReducers({\n    currentUser,\n    userDevices,\n    isLoading,\n    deviceTypes\n})\n\nexport default function configureStore(hydratedState = {}) {\n    const store = createStore(\n        rootReducer, \n        {...initialState, ...hydratedState},\n        composeWithDevTools (\n            applyMiddleware(thunk)\n        )\n    );\n    return store;\n}"]},"metadata":{},"sourceType":"module"}
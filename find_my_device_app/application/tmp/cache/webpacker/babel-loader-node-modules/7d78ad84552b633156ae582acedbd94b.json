{"ast":null,"code":"/*\n * action types\n */\nexport var ADD_DEVICE = 'ADD_DEVICE';\nexport var ADD_DEVICE_SUCCESS = 'ADD_DEVICE_SUCCESS';\nexport var ADD_DEVICE_FAILURE = 'ADD_DEVICE_FAILURE';\nexport var REMOVE_DEVICE_SUCCESS = 'REMOVE_DEVICE_SUCCESS';\nexport var REMOVE_DEVICE_FAILURE = 'REMOVE_DEVICE_FAILURE';\nexport var UPDATE_DEVICE_STATUS = 'UPDATE_DEVICE_STATUS';\nexport var UPDATE_DEVICE_STATUS_SUCCESS = 'UPDATE_DEVICE_STATUS_SUCCESS';\nexport var UPDATE_DEVICE_STATUS_FAILURE = 'UPDATE_DEVICE_STATUS_FAILURE';\nexport var SET_LOADING_STATUS = 'SET_LOADING_STATUS';\n/*\n * other constants\n */\n\nexport var DeviceStatus = {\n  GOOD_STANDING: 'good-standing',\n  MISSING: 'missing'\n};\n/*\n * action creators\n */\n\nexport function setLoading(isLoading) {\n  return {\n    type: SET_LOADING_STATUS,\n    isLoading: isLoading\n  };\n} // Add Device\n\nexport function addDevice(userId, name) {\n  return {\n    type: ADD_DEVICE,\n    name: name,\n    userId: userId\n  };\n}\nexport function addNewDeviceSuccess(device) {\n  return {\n    type: ADD_DEVICE_SUCCESS,\n    device: device\n  };\n}\nexport function addNewDeviceFailed(error) {\n  return {\n    type: ADD_DEVICE_FAILURE,\n    error: error\n  };\n} // Remove Device\n\nexport function removeDeviceSuccess(devices) {\n  return {\n    type: REMOVE_DEVICE_SUCCESS,\n    devices: devices\n  };\n}\nexport function removeDeviceFailed(error) {\n  return {\n    type: REMOVE_DEVICE_FAILURE,\n    error: error\n  };\n} // Device Status\n\nexport function updateDeviceStatus(deviceId, status) {\n  return {\n    type: UPDATE_DEVICE_STATUS,\n    deviceId: deviceId,\n    status: status\n  };\n}\nexport function updateDeviceStatusSuccess(response) {\n  return {\n    type: UPDATE_DEVICE_STATUS_SUCCESS,\n    deviceId: response.data.device_id,\n    status: response.data.status\n  };\n}\nexport function updateDeviceStatusFailed(deviceId, status) {\n  return {\n    type: UPDATE_DEVICE_STATUS_FAILURE,\n    deviceId: deviceId,\n    status: status\n  };\n}","map":{"version":3,"sources":["/Users/laurenshultz/Dev/web/CYBR4580/find_my_device_app/application/app/javascript/components/actions.js"],"names":["ADD_DEVICE","ADD_DEVICE_SUCCESS","ADD_DEVICE_FAILURE","REMOVE_DEVICE_SUCCESS","REMOVE_DEVICE_FAILURE","UPDATE_DEVICE_STATUS","UPDATE_DEVICE_STATUS_SUCCESS","UPDATE_DEVICE_STATUS_FAILURE","SET_LOADING_STATUS","DeviceStatus","GOOD_STANDING","MISSING","setLoading","isLoading","type","addDevice","userId","name","addNewDeviceSuccess","device","addNewDeviceFailed","error","removeDeviceSuccess","devices","removeDeviceFailed","updateDeviceStatus","deviceId","status","updateDeviceStatusSuccess","response","data","device_id","updateDeviceStatusFailed"],"mappings":"AAAA;;;AAIA,OAAO,IAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,4BAA4B,GAAG,8BAArC;AACP,OAAO,IAAMC,4BAA4B,GAAG,8BAArC;AAEP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP;;;;AAIA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,aAAa,EAAE,eADW;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAArB;AAKP;;;;AAIA,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+B;AAClC,SAAO;AAAEC,IAAAA,IAAI,EAAEN,kBAAR;AAA4BK,IAAAA,SAAS,EAATA;AAA5B,GAAP;AACH,C,CAEA;;AACD,OAAO,SAASE,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiC;AACtC,SAAO;AAAEH,IAAAA,IAAI,EAAEd,UAAR;AAAoBiB,IAAAA,IAAI,EAAJA,IAApB;AAA0BD,IAAAA,MAAM,EAANA;AAA1B,GAAP;AACD;AAED,OAAO,SAASE,mBAAT,CAA6BC,MAA7B,EAAqC;AACxC,SAAO;AAAEL,IAAAA,IAAI,EAAEb,kBAAR;AAA4BkB,IAAAA,MAAM,EAANA;AAA5B,GAAP;AACH;AAED,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACtC,SAAO;AAAEP,IAAAA,IAAI,EAAEZ,kBAAR;AAA4BmB,IAAAA,KAAK,EAALA;AAA5B,GAAP;AACH,C,CAED;;AACA,OAAO,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AACzC,SAAO;AAAET,IAAAA,IAAI,EAAEX,qBAAR;AAA+BoB,IAAAA,OAAO,EAAPA;AAA/B,GAAP;AACH;AAED,OAAO,SAASC,kBAAT,CAA4BH,KAA5B,EAAmC;AACtC,SAAO;AAAEP,IAAAA,IAAI,EAAEV,qBAAR;AAA+BiB,IAAAA,KAAK,EAALA;AAA/B,GAAP;AACH,C,CAGD;;AACA,OAAO,SAASI,kBAAT,CAA4BC,QAA5B,EAAsCC,MAAtC,EAA8C;AACnD,SAAO;AAAEb,IAAAA,IAAI,EAAET,oBAAR;AAA8BqB,IAAAA,QAAQ,EAARA,QAA9B;AAAwCC,IAAAA,MAAM,EAANA;AAAxC,GAAP;AACD;AAED,OAAO,SAASC,yBAAT,CAAmCC,QAAnC,EAA6C;AAChD,SAAO;AAAEf,IAAAA,IAAI,EAAER,4BAAR;AAAsCoB,IAAAA,QAAQ,EAAEG,QAAQ,CAACC,IAAT,CAAcC,SAA9D;AAAyEJ,IAAAA,MAAM,EAAEE,QAAQ,CAACC,IAAT,CAAcH;AAA/F,GAAP;AACH;AAED,OAAO,SAASK,wBAAT,CAAkCN,QAAlC,EAA4CC,MAA5C,EAAoD;AACvD,SAAO;AAAEb,IAAAA,IAAI,EAAEP,4BAAR;AAAsCmB,IAAAA,QAAQ,EAARA,QAAtC;AAAgDC,IAAAA,MAAM,EAANA;AAAhD,GAAP;AACH","sourcesContent":["/*\n * action types\n */\n\nexport const ADD_DEVICE = 'ADD_DEVICE';\nexport const ADD_DEVICE_SUCCESS = 'ADD_DEVICE_SUCCESS';\nexport const ADD_DEVICE_FAILURE = 'ADD_DEVICE_FAILURE';\n\nexport const REMOVE_DEVICE_SUCCESS = 'REMOVE_DEVICE_SUCCESS';\nexport const REMOVE_DEVICE_FAILURE = 'REMOVE_DEVICE_FAILURE';\n\nexport const UPDATE_DEVICE_STATUS = 'UPDATE_DEVICE_STATUS';\nexport const UPDATE_DEVICE_STATUS_SUCCESS = 'UPDATE_DEVICE_STATUS_SUCCESS';\nexport const UPDATE_DEVICE_STATUS_FAILURE = 'UPDATE_DEVICE_STATUS_FAILURE';\n\nexport const SET_LOADING_STATUS = 'SET_LOADING_STATUS';\n\n/*\n * other constants\n */\n\nexport const DeviceStatus = {\n  GOOD_STANDING: 'good-standing',\n  MISSING: 'missing'\n}\n\n/*\n * action creators\n */\n\nexport function setLoading(isLoading) {\n    return { type: SET_LOADING_STATUS, isLoading }\n}\n\n // Add Device\nexport function addDevice(userId, name) {\n  return { type: ADD_DEVICE, name, userId }\n}\n\nexport function addNewDeviceSuccess(device) {\n    return { type: ADD_DEVICE_SUCCESS, device }\n}\n\nexport function addNewDeviceFailed(error) {\n    return { type: ADD_DEVICE_FAILURE, error }\n}\n\n// Remove Device\nexport function removeDeviceSuccess(devices) {\n    return { type: REMOVE_DEVICE_SUCCESS, devices }\n}\n\nexport function removeDeviceFailed(error) {\n    return { type: REMOVE_DEVICE_FAILURE, error }\n}\n\n\n// Device Status\nexport function updateDeviceStatus(deviceId, status) {\n  return { type: UPDATE_DEVICE_STATUS, deviceId, status }\n}\n\nexport function updateDeviceStatusSuccess(response) {\n    return { type: UPDATE_DEVICE_STATUS_SUCCESS, deviceId: response.data.device_id, status: response.data.status }\n}\n\nexport function updateDeviceStatusFailed(deviceId, status) {\n    return { type: UPDATE_DEVICE_STATUS_FAILURE, deviceId, status }\n}"]},"metadata":{},"sourceType":"module"}